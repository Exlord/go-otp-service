openapi: 3.0.3
info:
  title: OTP Service API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /openapi.yaml:
    get:
      summary: Download OpenAPI YAML
      responses:
        '200':
          description: YAML file
  /openapi:
    get:
      summary: Swagger UI redirect (simple HTML)
      responses:
        '200':
          description: HTML docs
  /api/v1/auth/request-otp:
    post:
      summary: Request OTP for a phone number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone]
              properties:
                phone:
                  type: string
      responses:
        '200':
          description: OTP generated (printed on server)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '429':
          description: Rate limited
  /api/v1/auth/verify:
    post:
      summary: Verify OTP and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [phone, otp]
              properties:
                phone:
                  type: string
                otp:
                  type: string
      responses:
        '200':
          description: Authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid or expired OTP
  /api/v1/users:
    get:
      summary: List users (auth required)
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  total:
                    type: integer
      security:
        - bearerAuth: []
  /api/v1/users/{id}:
    get:
      summary: Get user by ID (auth required)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        phone:
          type: string
        registeredAt:
          type: string
          format: date-time
